1*AUTEUR: PASCAL BOURGUIGNON
2*DESCRIPTION: EDITEUR DE TEXTE
5*ENCOURS

10 &UNIX();*&MITRA() ;*&T1600() ;* INITIALIZATION
20 TERMINER


900*   (.)A     APPEND TEXT TO THE BUFFER AFTER THE ADDRESSED/CURRENT LINES (CAN BE 0).
901*   (.)I     INSERT TEXT IN THE BUFFER BEFORE THE ADDRESSED/CURRENT LINE.
902* (.,.)D     DELETE THE ADDRESSED LINES. IF THERE'S A LINE AFTER THE DELETED RANGE
903*            THEN THE CURRENT ADDRESS IS SET TO THIS LINE, OTHERWISE TO THE LINE BEFORE.
904* (.,.)Y     COPIES (YANKS) THE ADDRESSED LINES TO THE CUT BUFFER.
905*   (.)X     PASTE (PUTS) THE CUT BUFFER AFTER THE ADDRESSED LINES.
906*      U     UNDO THE LAST COMMAND AND RESTORES THE CURRENT ADDRESS TO WHAT IT WAS.
907*            G AND V ARE TREATED AS A SINGLE COMMAND. U=U^-1
908* (.,.)T(.)  COPY LINES (TRANSFERS). THE CURRENT IS SET TO THE LAST COPIED LINE.
909* (.,.)M(.)  MOVES LINE. THE CURRENT IS SET TO THE LAST COPIED LINE.
910* (.,.)C     CHANGE LINES IN THE BUFFER: THE ADDRESSED LINES ARE DELETED, AND 
911*            TEXT IS APPENDED IN THEIR PLACE.
912* (.,.)J     JOINS THE ADDRESSED LINES. THE CURRENT IS THE RESULTING LINE.
913*   (.)KL    MARK THE LINE WITH A LETTER L. 'L REFERS THAT LINE.
914*   ($)=     PRINTS THE LINE NUMBER OF THE ADDERSSED LINE.
915* (.+1)ZN    SCROLLS N LINES AT A TIME.
916* (.+1)      PRINTS THE ADDRESSED LINE.
917* (.,.)P     PRINTS THE ADDRESSED LINES.
918* (.,.)N     PRINTS THE ADDRESSED LINES AND THEIR LINE NUMBER.
919* (.,.)L     PRINTS THE ADDRESSED LINES UNAMBIGUOUSLY.
920* (.,.)S/RE/REPL/[GN] REPLACE TEXT IN THE ADDRESSED LINES MATCHING A REGEXP.
921* (.,.)S     REPEAT THE LAST SUBSTITUTION.
922* (1,$)G/RE/COMMAND-LIST APPLIES COMMAND LIST TO EACH OF THE ADDRESSED LINES MATCHING THE REGEXP.
923* (1,$)V/RE/COMMAND-LIST APPLIES COMMAND LIST TO EACH OF THE ADDRESSED LINES NOT MATCHING THE REGEXP.
924* (1,$)G*/RE/ INTERACTIVELY EDIT THE ADDRESSED LINES MATCHING THE REGULAR EXCPRESSION. FOR EACH MATCHING LINE, THE USER IS PROMPTED A COMMAND-LIST.
925* (1,$)V*/RE/ INTERACTIVELY EDIT THE ADDRESSED LINES NOT MATCHING THE REGULAR EXCPRESSION. FOR EACH MATCHING LINE, THE USER IS PROMPTED A COMMAND-LIST.
926* (1,$)W* FILE   APPENDS THE ADDRESSED LINES TO THE END OF FILE.
927* (1,$)W FILE    WRITE THE ADDRESSED LINES TO THE FILE.
928* (1,$)WQ FILE   WRITE THE ADDRESSED LINES TO THE FILE AND QUIT,
929*   ($)R FILE    READS FILE TO AFTER THE ADDRESSED LINE.
930*      E FILE    EDIT THE FILE.
931*      Q         QUITS.

932* CMD -> [ADDR [',' ADDR]] CMD [(ADDR|FILE|'/'REGEXP'/'(CMDLIST|REPLACEMENT'/' [(G|N)]))]

1000* DEcoder 
1001* Le programme est rangé sous forme de chaîne de caractères, chaque ligne 
1002* étant  terminé par un code X-OFF (19) et avec un code NUL (0) à la fin, 
1003* dans des enregistrements consécutifs partant du numéro 1.  
1004* SUR T-1600, LES ENREGISTREMENTS CONTIENNENT DES LIGNES COMPLETES.
1005* SUR MITRA-15, LES LIGNES PEUVENT ETRE A CHEVAL SUR PLUSIEURS ENREGISTREMENTS.
1006* SUR UNIX, LES ENREGISTREMENTS FONT 1016 OCTETS, AU LIEU DES 252 SUR MINI.

1010* (ceiling 255 63) -> 5
1011* (ceiling 65535 254) -> 259

1800 PROCEDURE &MITRA()
1801 MXVEC_63 ;* TAILLE MAXIMUM D'UN VECTEUR DANS UN ENREGISTREMENT DE FICHIER. 
1802 MXCHA_252;* TAILLE MAXIMUM D'UNE CHAINE DANS UN ENREGISTREMENT DE FICHIER. 
1803 MXLIG_80 ;* TAILLE MAXIMUM D'UNE LIGNE DE PROGRAMME.                       
1804 MXNUM_250;* NUMERO DE LIGNE MAXIMUM.                                       
1805 RETOUR

1810 PROCEDURE &T1600()
1811 MXVEC_63 ;* TAILLE MAXIMUM D'UN VECTEUR DANS UN ENREGISTREMENT DE FICHIER. 
1812 MXCHA_252;* TAILLE MAXIMUM D'UNE CHAINE DANS UN ENREGISTREMENT DE FICHIER. 
1813 MXLIG_80 ;* TAILLE MAXIMUM D'UNE LIGNE DE PROGRAMME.                       
1814 MXNUM_255;* NUMERO DE LIGNE MAXIMUM.                                       
1815 RETOUR

1820 PROCEDURE &UNIX()
1821 MXVEC_254  ;* TAILLE MAXIMUM D'UN VECTEUR DANS UN ENREGISTREMENT DE FICHIER.
1822 MXCHA_1018 ;* TAILLE MAXIMUM D'UNE CHAINE DANS UN ENREGISTREMENT DE FICHIER.
1823 MXLIG_65535;* TAILLE MAXIMUM D'UNE LIGNE DE PROGRAMME.
1824 MXNUM_65535;* NUMERO DE LIGNE MAXIMUM.                                       
1825 RETOUR


2000 PROCEDURE &EDIT(FICHT) LOCAL FICHT
2001* FICHT EST UN FICHIER CONTENANT LE TEXTE A EDITER, SOUS FORME
2002* DE LIGNES SEPAREES PAR X-OFF, ET TERMINE PAR UN CODE NUL.
2003* LES ENREGISTREMENTS CONSECUTIFS PARTENT DU NUMERO 1.
2004* ON TRANSFORME LE FICHIER POUR N'AVOIR QU'UNE SEULE LIGNE PAR 
2005* ENREGISTREMENT, ET UN INDEX DES LIGNES DANS L'ENREGISTREMENT 1.
2006*

11000*&DEINI(FICHT)  INITIALISE L'ITERATION DANS LE FICHIER TEXTE FICHT.
11001*               UTILISE LES VARIABLES GLOBALES: DEFIC,DERNO,DEIND,DEFIN
11002 PROCEDURE &DEINI(FICHT) LOCAL FICHT,RES
11003 CHAINE DEFIC;DEFIC_FICHT;DERNO_1
11004 CHAINE XOFF,NULL;XOFF_EQC(19);NULL_EQC(0)
11005 &DENEX()
11006 RETOUR

11100*&DENEX() PROCEDURE INTERNE: LIT L'ENREGISTREMENT SUIVANT.
11101 PROCEDURE &DENEX()
11102 CHARGER DEREC,DERNO,DEFIC,RES
11103 SI RES=-2 ALORS &ERROR('FICHIER INEXISTANT '!DEFIC)
11104 SI RES=-1 ALORS DEFIN_1
11105 SI RES#3 ALORS &ERROR('TYPE D''ENREGISTREMENT INVALIDE '!CCA(RES)!' (ATTENDU UNE CHAINE)')
11106 DERNO_DERNO+1;DEIND_1;DEFIN_0
11107 RETOUR

11200*&DEFIN() RETOURNE 0 SI LA FIN DE FICHIER N'EST PAS ATTEINTE, 1 SINON.
11201 PROCEDURE &DEFIN();RESULTAT DEFIN

11300*&DESUI() RETOURNE LA LIGNE SUIVANTE DANS LE FICHIER TEXTE.
11301 PROCEDURE &DESUI() LOCAL LIGNE,FINLI;CHAINE LIGNE;LIGNE_''
11302 FINLI_PTR(DEREC,DEIND,XOFF)
11303 SI FINLI<=LGR(DEREC) ALORS ALLER EN 11307
11304 LIGNE_LIGNE!SCH(DEREC,DEIND,LGR(DEREC)-DEIND+1)
11305 &DENEX()
11306 ALLER EN 11302 
11307 LIGNE_LIGNE!SCH(DEREC,DEIND,FINLI+1-DEIND)
11308 DEIND_FINLI+1
11309 SI SCH(DEREC,DEIND,1)=NULL ALORS DEFIN_1 SINON SI LGR(DEREC)<DEIND ALORS &DENEX() 
11310 RESULTAT SCH(LIGNE,1,LGR(LIGNE)-1)

11400*&DELIS(FICHT) LISTE LE CONTENU DU FICHIER TEXTE FICHT.
11401 PROCEDURE &DELIS(FICHT) LOCAL FICHT,LIGNE,LINO,DEB;CHAINE LIGNE
11402 &DEINI(FICHT);LINO_1
11403 SI &DEFIN()#0 ALORS ALLER EN 11411
11404 LIGNE_&DESUI();DEB_1
11405 AFFICHER[F5.0,':']LINO
11406 SI LGR(LIGNE)<DEB+72 ALORS ALLER EN 11409
11407 AFFICHER[U,/,6X,':']SCH(LIGNE,DEB,72);DEB_DEB+72
11408 ALLER EN 11406
11409 AFFICHER[U,/]SCH(LIGNE,DEB,LGR(LIGNE)-DEB+1);LINO_LINO+1
11410 ALLER EN 11403
11411 RETOUR

12000*&DE2TF(FICHT,FICHW) CONVERTI LE FICHIER TEXTE FICHT DANS LE
12001*                    FICHIER DE TRAVAIL DE L'EDITEUR FICHW.
12002 PROCEDURE &DE2TF(FICHT,FICHW,FICHI) LOCAL FICHT,FICHW,FICHI,LIGNE,LINO,LICON,INCON,LIGLI
12003 CHAINE LIGNE
12004 LINO_1
12005 &IFINI(FICHI)
12006 LIGLI_&IFCON(0,0);INCON_LIGLI
12007 &DEINI(FICHT)
12008 SI &DEFIN()#0 ALORS ALLER EN 12016
12009 LIGNE_&DESUI()
12010 GARER LIGNE,LINO,FICHW
12011 LICON_&IFCON(LINO,0)
12012 LINO_LINO+1
12013 &IFRPD(INCON,LICON)
12014 INCON_LICON
12015 ALLER EN 12008
12016 &IFRPA(&IFCDR(&IFCDR(1)),&IFCDR(LIGLI))
12017 &IFREE(LIGLI)
12018 RETOUR


13900* THE INDEX FILE CONTAINS CONS CELLS. THE FIRST ONE IS A LIST OF THREE ELEMENTS:
13901* 1: (TAILF FRELI LIGLI)
13902* TAILF IS THE FIRST UNALLOCATED RECNO IN THE INDEX FILE.
13903* FRELI IS THE LIST OF FREE CELLS.
13904* LIGLI IS THE LIST OF LINE RECNO IN THE RECORD FILE.
13905* INFIC_'INDEX'

14000* &IFINI(INDFI)
14001 PROCEDURE &IFINI(IFNOM) LOCAL IFNOM,CELL
14002 CHAINE INFIC;INFIC_IFNOM
14003 TABLEAU CELL[2]
14004 CELL[1]_4;CELL[2]_2;GARER CELL,1,INFIC
14005 CELL[1]_0;CELL[2]_3;GARER CELL,2,INFIC
14006 CELL[1]_0;CELL[2]_0;GARER CELL,3,INFIC
14007 RETOUR

14100* &IFCON(A,D) (CONS A D) IN THE INDEX FILE INFIC.
14101 PROCEDURE &IFCON(A,D) LOCAL A,D,RECNO,FRELI,CONS
14102 FRELI_&IFCAR(&IFCDR(1))
14103 SI FRELI=0 ALORS ALLER EN 14109
14104 RECNO_&IFCAR(FRELI);FRELI_&IFCDR(FRELI)
14105 &IFRPA(&IFCDR(1),FREELI)
14106 &IFRPA(RECNO,A)
14107 &IFRPD(RECNO,D)
14108 ALLER EN 14115
14109 RECNO_&IFCAR(1)
14110 TABLEAU CONS[2]
14111 CONS[1]_A
14112 CONS[2]_D
14113 GARER CONS,RECNO,INFIC
14114 &IFRPA(1,&IFCAR(1)+1)
14115 RESULTAT RECNO

14200* &IFCAR(C) RETURN THE CAR CELL OF THE CONS C IN THE FILE INFIC
14201* &IFCDR(C) RETURN THE CDR CELL OF THE CONS C IN THE FILE INFIC
14202* &IFRPA(C,V) SETS THE CAR CELL OF THE CONS C IN THE FILE INFIC
14203* &IFRPD(C,V) SETS THE CDR CELL OF THE CONS C IN THE FILE INFIC
14204 PROCEDURE &IFCAR(C) LOCAL C,CELL;CHARGER CELL,C,INFIC;RESULTAT CELL[1]
14205 PROCEDURE &IFCDR(C) LOCAL C,CELL;CHARGER CELL,C,INFIC;RESULTAT CELL[2]
14206 PROCEDURE &IFRPA(C,V) LOCAL C,V,CELL;CHARGER CELL,C,INFIC;CELL[1]_V;GARER CELL,C,INFIC;RETOUR
14207 PROCEDURE &IFRPD(C,V) LOCAL C,V,CELL;CHARGER CELL,C,INFIC;CELL[2]_V;GARER CELL,C,INFIC;RETOUR

14300* &IFREE(C) FREES THE CELL C IN THE FILE INFIC (ADDS IT TO THE FREELIST)
14301 PROCEDURE &IFREE(C) LOCAL C,F,FRELI,CELL
14302 F_&IFCDR(1);FRELI_&IFCAR(F)
14303 &IFRPD(C,FRELI)
14304 &IFRPA(F,C)
14305 RETOUR


21001 PROCEDURE &CMDA(ADR) LOCAL ADR
21002 &ERROR('COMMANDE ''A'' PAS ENCORE IMPLEMENTEE');RETOUR
22001 PROCEDURE &CMDI(ADR) LOCAL ADR
22002 &ERROR('COMMANDE ''I'' PAS ENCORE IMPLEMENTEE');RETOUR
23001 PROCEDURE &CMDD(PREM,DERN) LOCAL PREM,DERN
23002 &ERROR('COMMANDE ''D'' PAS ENCORE IMPLEMENTEE');RETOUR
24001 PROCEDURE &CMDY(PREM,DERN) LOCAL PREM,DERN
24002 &ERROR('COMMANDE ''Y'' PAS ENCORE IMPLEMENTEE');RETOUR
25001 PROCEDURE &CMDX(ADR) LOCAL ADR
25002 &ERROR('COMMANDE ''X'' PAS ENCORE IMPLEMENTEE');RETOUR
26001 PROCEDURE &CMDU()
26002 &ERROR('COMMANDE ''U'' PAS ENCORE IMPLEMENTEE');RETOUR
27001 PROCEDURE &CMDT(PREM,DERN,DEST) LOCAL PREM,DERN,DEST
27002 &ERROR('COMMANDE ''T'' PAS ENCORE IMPLEMENTEE');RETOUR
28001 PROCEDURE &CMDM(PREM,DERN,DEST) LOCAL PREM,DERN,DEST
28002 &ERROR('COMMANDE ''M'' PAS ENCORE IMPLEMENTEE');RETOUR
29001 PROCEDURE &CMDC(PREM,DERN) LOCAL PREM,DERN
29002 &ERROR('COMMANDE ''C'' PAS ENCORE IMPLEMENTEE');RETOUR
30001 PROCEDURE &CMDJ(PREM,DERN) LOCAL PREM,DERN
30002 &ERROR('COMMANDE ''J'' PAS ENCORE IMPLEMENTEE');RETOUR
31001 PROCEDURE &CMDK(ADR,LETRE) LOCAL ADR,LETRE
31002 &ERROR('COMMANDE ''K'' PAS ENCORE IMPLEMENTEE');RETOUR
32001 PROCEDURE &CMDEQ(ADR) LOCAL ADR
32002 &ERROR('COMMANDE ''='' PAS ENCORE IMPLEMENTEE');RETOUR
33001 PROCEDURE &CMDZ(ADR,NLIG) LOCAL ADR,NLIG
33002 &ERROR('COMMANDE ''Z'' PAS ENCORE IMPLEMENTEE');RETOUR
34001 PROCEDURE &CMDCR(ADR) LOCAL ADR
34002 &ERROR('COMMANDE ''CR'' PAS ENCORE IMPLEMENTEE');RETOUR
35001 PROCEDURE &CMDP(PREM,DERN) LOCAL PREM,DERN
35002 &ERROR('COMMANDE ''P'' PAS ENCORE IMPLEMENTEE');RETOUR
36001 PROCEDURE &CMDN(PREM,DERN) LOCAL PREM,DERN
36002 &ERROR('COMMANDE ''N'' PAS ENCORE IMPLEMENTEE');RETOUR
37001 PROCEDURE &CMDL(PREM,DERN) LOCAL PREM,DERN
37002 &ERROR('COMMANDE ''L'' PAS ENCORE IMPLEMENTEE');RETOUR
38001 PROCEDURE &CMDS(PREM,DERN,REGEX,REPL,OPT) LOCAL PREM,DERN,REGEX,REPL,OPT
38002 &ERROR('COMMANDE ''S'' PAS ENCORE IMPLEMENTEE');RETOUR
39001 PROCEDURE &CMDSR(PREM,DERN) LOCAL PREM,DERN
39002 &ERROR('COMMANDE ''SR'' PAS ENCORE IMPLEMENTEE');RETOUR
40001 PROCEDURE &CMDG(PREM,DERN,REGEX,CMDS) LOCAL PREM,DERN,REGEX,CMDS
40002 &ERROR('COMMANDE ''G'' PAS ENCORE IMPLEMENTEE');RETOUR
41001 PROCEDURE &CMDGI(PREM,DERN,REGEX) LOCAL PREM,DERN,REGEX
41002 &ERROR('COMMANDE ''GI'' PAS ENCORE IMPLEMENTEE');RETOUR
42001 PROCEDURE &CMDV(PREM,DERN,REGEX,CMDS) LOCAL PREM,DERN,REGEX,CMDS
42002 &ERROR('COMMANDE ''V'' PAS ENCORE IMPLEMENTEE');RETOUR
43001 PROCEDURE &CMDVI(PREM,DERN,REGEX) LOCAL PREM,DERN,REGEX
43002 &ERROR('COMMANDE ''VI'' PAS ENCORE IMPLEMENTEE');RETOUR
44001 PROCEDURE &CMDW(PREM,DERN,FILE) LOCAL PREM,DERN,FILE
44002 &ERROR('COMMANDE ''W'' PAS ENCORE IMPLEMENTEE');RETOUR
45001 PROCEDURE &CMDWP(PREM,DERN,FILE) LOCAL PREM,DERN,FILE
45002 &ERROR('COMMANDE ''W*'' PAS ENCORE IMPLEMENTEE');RETOUR
46001 PROCEDURE &CMDWQ(PREM,DERN,FILE) LOCAL PREM,DERN,FILE
46002 &ERROR('COMMANDE ''WQ'' PAS ENCORE IMPLEMENTEE');RETOUR
47001 PROCEDURE &CMDR(ADR,FILE) LOCAL ADR,FILE
47002 &ERROR('COMMANDE ''R'' PAS ENCORE IMPLEMENTEE');RETOUR
48001 PROCEDURE &CMDE(FILE) LOCAL FILE
48002 &DE2TF(FILE,'EDITW','EDITI')
48003 RETOUR
49001 PROCEDURE &CMDQ()
49999 &ERROR('COMMANDE ''Q'' PAS ENCORE IMPLEMENTEE');RETOUR
