1* AUTEUR: PASCAL BOURGUIGNON
2* DESCRIPTION: PARSE UNE COMMANDE ED.
5* EN COURS
10 CHAINE INTER;INTER_'EDITC'
11 CHARGER CMD,1,INTER
12 CHARGER ADDRS,2,INTER
13 TOP_ADDRS[1];CURR_ADDRS[2];BOT_ADDRS[3]
100 PROCEDURE &PARSE(CMD) LOCAL C0,C1,C2,CA,CR,CF,CN,CL,CMD,ENDLE,ENDRI,ERROR,AFRST,CFRST,LEFT,REXLD,REXLE,REXRD,REXRI,RIGH,STALE,STARI,STARC,NADR,UCMD,EXT
101 CHAINE EXT
102 CHAINE AFRST;AFRST_'.$0123456789-^+/?'''
103 CHAINE CFRST;CFRST_'=ACDEGIJKLMNPQRSTUVWXYZ'
104 C0_'UEQ';C1_'AIXK=ZR';C2_'DYTMCJPNLSGVW';CA_'TM';CR_'SG';CF_'WRE';CN_'Z';CL_'K'
105 STALE_SKP(CMD,1,' ')
106 SI &ISIN(SCH(CMD,STALE,1),AFRST)=0 ALORS DEBUT NADR_0;STARC_STALE;ALLER EN 115 FIN
107 &PADDR(CMD,STALE,LEFT,REXLE,REXLD,ENDLE,ERROR)
108 SI ERROR#'' ALORS &ERROR(ERROR)
109 STARI_SKP(CMD,ENDLE,' ')
110 SI STARI>=LGR(CMD) OU SCH(CMD,STARI,1)#',' ALORS DEBUT NADR_1;STARC_STARI;ALLER EN 114 FIN
111 &PADDR(CMD,STARI,RIGH,REXRI,REXRD,ENDRI,ERROR)
112 SI ERROR#'' ALORS &ERROR(ERROR)
113 NADR_2;STARC_ENDRI
114* UNE SEULE ADDRESSE
115* PAS D'ADRESSE
116 STARC_SKP(CMD,STARC,' ')
117 UCMD_&UPCAS(SCH(CMD,STARC,1))
118 SI &ISIN(UCMD,CFRST)=0 ALORS &ERROR('COMMANDE INVALIDE '!UCMD)
119 SI &ISIN(UCMD,C0) ET 0<NADR ALORS &ERROR('TROP D''ADRESSES DONNEES A LA COMMANDE '!UCMD)
120 SI &ISIN(UCMD,C1) ET 1<NADR ALORS &ERROR('TROP D''ADRESSES DONNEES A LA COMMANDE '!UCMD)
121 SI NON(UCMD='W' ET STARC<LGR(CMD)) ALORS ALLER EN 124
122 EXT_SCH(CMD,STARC+1,1)
123 SI EXT='*' OU EXT='Q' ALORS DEBUT UCMD_UCMD!EXT;STARC_STARC+1 FIN
124 SI NON((UCMD='V' OU UCMD='G') ET STARC<LGR(CMD)) ALORS ALLER EN 127
125 EXT_SCH(CMD,STARC+1,1)
126 SI EXT='*' ALORS DEBUT UCMD_UCMD!EXT;STARC_STARC+1 FIN
127 SI &ISIN(SCH(UCMD,1,1),CA)#0 ALORS DEBUT &PTADR(CMD,STARC);ALLER EN 160 FIN
128 SI &ISIN(SCH(UCMD,1,1),CR)#0 ALORS DEBUT &PREXG(CMD,STARC);ALLER EN 160 FIN
129 SI &ISIN(SCH(UCMD,1,1),CF)#0 ALORS DEBUT &PFILE(CMD,STARC);ALLER EN 160 FIN
130 SI &ISIN(SCH(UCMD,1,1),CN)#0 ALORS DEBUT &PNUMB(CMD,STARC);ALLER EN 160 FIN
131 SI &ISIN(SCH(UCMD,1,1),CL)#0 ALORS DEBUT &PLETR(CMD,STARC);ALLER EN 160 FIN
130 END_SKP(CMD,STARC,' ')
131 SI END#LGR(CMD)+1 ALORS &ERROR('CARACTERES INVALIDES EN FIN DE COMMANDE '!CMD)
160 RETOUR

700 PROCEDURE &ISIN(LETRE,SET) LOCAL LETRE,SET
710 RESULTAT SI LGR(SET)<PTR(SET,1,LETRE) ALORS 0 SINON 1


810* address -->   '.' | '$' | number
811*             | '-' | '^' | '-' number | '^' number
812*                   | '+' | '+' number | space number
813*                   | '/' re '/' | '?' re '?' | '//' | '??'
814*                   | "'" lc .
815*
900*   (.)A     APPEND TEXT TO THE BUFFER AFTER THE ADDRESSED/CURRENT LINES (CAN BE 0).
901*   (.)I     INSERT TEXT IN THE BUFFER BEFORE THE ADDRESSED/CURRENT LINE.
902* (.,.)D     DELETE THE ADDRESSED LINES. IF THERE'S A LINE AFTER THE DELETED RANGE
903*            THEN THE CURRENT ADDRESS IS SET TO THIS LINE, OTHERWISE TO THE LINE BEFORE.
904* (.,.)Y     COPIES (YANKS) THE ADDRESSED LINES TO THE CUT BUFFER.
905*   (.)X     PASTE (PUTS) THE CUT BUFFER AFTER THE ADDRESSED LINES.
906*      U     UNDO THE LAST COMMAND AND RESTORES THE CURRENT ADDRESS TO WHAT IT WAS.
907*            G AND V ARE TREATED AS A SINGLE COMMAND. U=U^-1
908* (.,.)T(.)  COPY LINES (TRANSFERS). THE CURRENT IS SET TO THE LAST COPIED LINE.
909* (.,.)M(.)  MOVES LINE. THE CURRENT IS SET TO THE LAST COPIED LINE.
910* (.,.)C     CHANGE LINES IN THE BUFFER: THE ADDRESSED LINES ARE DELETED, AND 
911*            TEXT IS APPENDED IN THEIR PLACE.
912* (.,.)J     JOINS THE ADDRESSED LINES. THE CURRENT IS THE RESULTING LINE.
913*   (.)KL    MARK THE LINE WITH A LETTER L. 'L REFERS THAT LINE.
914*   ($)=     PRINTS THE LINE NUMBER OF THE ADDERSSED LINE.
915* (.+1)ZN    SCROLLS N LINES AT A TIME.
916* (.+1)      PRINTS THE ADDRESSED LINE.
917* (.,.)P     PRINTS THE ADDRESSED LINES.
918* (.,.)N     PRINTS THE ADDRESSED LINES AND THEIR LINE NUMBER.
919* (.,.)L     PRINTS THE ADDRESSED LINES UNAMBIGUOUSLY.
920* (.,.)S/RE/REPL/[GN] REPLACE TEXT IN THE ADDRESSED LINES MATCHING A REGEXP.
921* (.,.)S     REPEAT THE LAST SUBSTITUTION.
922* (1,$)G/RE/COMMAND-LIST APPLIES COMMAND LIST TO EACH OF THE ADDRESSED LINES MATCHING THE REGEXP.
923* (1,$)V/RE/COMMAND-LIST APPLIES COMMAND LIST TO EACH OF THE ADDRESSED LINES NOT MATCHING THE REGEXP.
924* (1,$)G*/RE/ INTERACTIVELY EDIT THE ADDRESSED LINES MATCHING THE REGULAR EXCPRESSION. FOR EACH MATCHING LINE, THE USER IS PROMPTED A COMMAND-LIST.
925* (1,$)V*/RE/ INTERACTIVELY EDIT THE ADDRESSED LINES NOT MATCHING THE REGULAR EXCPRESSION. FOR EACH MATCHING LINE, THE USER IS PROMPTED A COMMAND-LIST.
926* (1,$)W* FILE   APPENDS THE ADDRESSED LINES TO THE END OF FILE.
927* (1,$)W FILE    WRITE THE ADDRESSED LINES TO THE FILE.
928* (1,$)WQ FILE   WRITE THE ADDRESSED LINES TO THE FILE AND QUIT,
929*   ($)R FILE    READS FILE TO AFTER THE ADDRESSED LINE.
930*      E FILE    EDIT THE FILE.
931*      Q         QUITS.

932* CMD -> [ADDR [',' ADDR]] CMD [(ADDR|FILE|'/'REGEXP'/'(CMDLIST|REPLACEMENT'/' [(G|N)]))]



19600* &UPCAS(STR) UPPER CASE THE STRING
19601 PROCEDURE &UPCAS(STR) LOCAL STR,UPP,C,CC,I,LOA,LOZ,LO2UP
19602 LOA_97;LOZ_122;LO2UP_-32;*LOWER CASE TO UPPER CASE
19603 CHAINE UPP,C
19604 UPP_''
19605 FAIRE 19608 POUR I_1 JUSQUA LGR(STR)
19606 C_SCH(STR,I,1)
19607 CC_EQN(C)
19608 UPP_UPP!SI LOA<=CC ET CC<=LOZ ALORS EQC(CC+LO2UP) SINON C
19609 RESULTAT UPP
