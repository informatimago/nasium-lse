1*AUTEUR: PASCAL BOURGUIGNON
2*DESCRIPTION: ECHANGE DE MESSAGE ENTRE UTILISATEURS DU SYSTEME LSE
3* - CREATE A USER ACCOUNT 
4* - SELF CREATE A USER ACCOUNT 
5* - DELETE A USER ACCOUNT (AND ITS MAILBOX)
6* - LIST THE USER ACCOUNTS
7* - SEND A MESSAGE TO A USER
8* - LIST THE RECEIVED MESSAGE
9* - READ A RECEIVED MESSAGE
10* - RESPOND TO A RECEIVED MESSAGE
11* - DELETE A RECEIVED MESSAGE

20 &INIT()
30 &MESG()
40 TERMINER

100* &FNREC(FILE) ALLOCATE A NEW RECORD IN THE FILE.
101* &FFREC(FILE,RECNO) FREES A RECORD IN THE FILE
102* &UOPEN: CHECK AND CREATE USER FILE
103* &UNREC: ALLOCATES A NEW RECORD IN THE USER FILE
104* &UFREC: FREES AN OLD RECORD IN THE USER FILE
105* &UQUER(NUSRS,USERS)
106* &RFUID(NUSRS,USERS,UID,INDEX) FIND THE RECORD FOR THE GIVEN UID IN THE USERS TABLEAU
107* &UQUID(UID) QUERY USER RECORD BY UID
108* &UQNAM(NAME) QUERY USER RECORD BY NAME
109* &NUID(NUSRS,USERS) COMPUTE A NEW UID
110* &HASH(CH) COMPUTE A HASH OF THE STRING; THIS IS A STUB IMPLEMENTATION, A REAL HASH IS NEEDED.
111* &UIUSR(NAME,PASS,RIGHS) INSERT A NEW USER IN THE USER FILE
112* &UVALI(NAME,PASS) VALIDATE USER LOGIN
113* &UDUSR(NAME) DELETE THE NAMED USER
114* &MOPEN: CHECK AND CREATE MESG FILE
115* &MNREC: ALLOCATES A NEW RECORD IN THE MESG FILE
116* &MFREC: FREES AN OLD RECORD IN THE MESG FILE
117* &MQNAM(NAME) QUERY A USER RECORD IN A MESSAGE FILE BY NAME
118* &MQUID(UID,MESGS) QUERY A USER RECORD IN A MESSAGE FILE BY UID
119* &MIUSR(NAME) INSERT A RECORD FOR NAMED USER IN THE MESSAGE FILE
120* &MIUID(UID) INSERT A RECORD FOR USER WITH UID IN THE MESSAGE FILE
121* &MDUNA(NAME) DELETE USER BY NAME FROM MESSAGE FILE
122* &MDUID(UID) DELETE USER BY UID FROM MESSAGE FILE
123* &FIELD(REC,SEP,INDEX) RETURN THE FIELD AT INDEX IN THE RECORD.
124* &SUBST(STR,OLD,NEW) SUBSTITUTE ALL OCCURENCES OF OLD BY NEW IN THE STRING
125* &STMSG(MESG) STORE THE MESSAGE IN THE MESSAGE FILE
126* &LDMSG(RECNO) LOAD THE MESSAGE FROM THE MESSAGE FILE
127* &DLMSG(RECNO) DELETE THE MESSAGE FROM THE MESSAGE FILE
128* &MIMSG(UID,MESG) INSERT A NEW MESSAGE INTO THE MESSAGE FILE
129* &MQMGS(UID) RETURN THE NUMBER OF MESSAGES FOR USER UID
130* &MQMSG(UID,INDEX) RETURN THE MESSAGE AT INDEX FOR THE USER UID
131* &MDMSG(UID,INDEX) DELETE THE MESSAGE AT INDEX FOR THE USER UID
132* &QUERY(PRMPT,TYPE) ASK THE USER FOR A DATA OF THE GIVEN TYPE
133* &EDIT(TITLE) EDIT A MULTI-LINE STRING LINES ARE TERMINATED WITH A LF CODE.
134* &ESMSG(FROM,TO,SUBJECT) EDIT AND SEND MESSAGE.
135* &SEL(RIGHS) CHECK WHETHER THE RIGHS ARE IN THE CURRENT USER RIGHTS
136* &CSCC() SE CREER UN COMPTE
137* &CLIN() LOG IN
138* &CLOUT() LOG OUT
139* &CCCU() CREER UN COMPTE UTILISATEUR
140* &CSCU() SUPPRIMER UN COMPTE UTILISATEUR
141* &CLCU() LISTER LES COMPTES UTILISATEUR
142* &CSNDM() ENVOYER UN MESSAGE
143* &CLISM() LISTER SES MESSAGES
144* &CREDM() LIRE UN MESSAGE
145* &CRESM() REPONDRE A UN MESSAGE
146* &CDELM() SUPPRIMER UN MESSAGE
147* &CQUIT() QUITTER
148* &CKRIG(RIGHT) SIGNALS AN ERROR IF RIGHT IS NOT IN CUSER RIGHTS. 
149* &HEADS(MESG) PARSES HEADERS OUT OF THE MESSAGE
150* &HFELD(HEADS,KEY) SELECT THE VALUE OF THE HEADER KEY.
151* &PAD(CH,LEN,JUST) PAD A STRING
152* &MKSTR(LEN,CH) MAKES A STRING OF LENGTH LEN CONTAINING REPEATIONS OF STRING CH.
153* &TRIM(BAD,STRING) TRIM THE STRING LEFT AND RIGHT FROM ITS BAD CHARACTERS.
154* &UPCAS(STR) UPPER CASE THE STRING
155* &ERROR(MSG) SIGNALS AN ERROR
156* &MESG() THE MAIN PROGRAM



200* MAX 254 SLOTS PER RECORD FOR ARRAYS. 2 SLOT PER USER = 127 USERS.
201*
202* #USERS
203* 1:"USERS|1"
204* 2:[MAX-RECNO,FREE-LIST-RECNO,NUSER] 
205* 3:[[UID1,USER1-RECNO],[UID2,USER2-RECNO],[UID3,USER3-RECNO],…]
206* 4:"U|uid|name|md5pass|MAIL+USER"
207* 5:next-free
208* 
210* #MESGS
211* 1:"MESG|1"
212* 2:[MAX-RECNO,FREE-LIST-RECNO,NUSER]
213* 3:[[UID1,USER1-RECNO],[UID2,USER2-RECNO],[UID3,USER3-RECNO],…]
214* 4:[NMSG,MSG1-RECNO,MSG2-RECNO,…]
215* 5:next-free
216* 6:"M|next-record|text"
217* 7:"M|next-record|text"


700 CHAINE FROM;FROM_'PJB'
710 CHAINE TO;TO_'STARSKY'
720 CHAINE SUBJ;SUBJ_'CONTACT'
730 CHAINE DATE;DATE_DAT()
740 CHAINE BODY;BODY_'HELLO PAL!'
750 CHAINE MESG;MESG_'FROM: '!FROM!LF!'TO: '!TO!LF!'DATE: '!DATE!LF!'SUBJECT: '!SUBJ!LF!LF!BODY!LF
760 AFFICHER MESG
770 TERMINER


800 PROCEDURE &DUMP(FILE) LOCAL REC,RECNO,FILE,RES
801 RECNO_1
802 CHARGER REC,RECNO,FILE,RES
803 SI RES<-2 ALORS DEBUT AFFICHER 'NO SUCH FILE '!FILE;RETOUR FIN
804 SI RES<-1 ALORS DEBUT AFFICHER 'NO SUCH RECORD '!CCA(RECNO);RETOUR FIN
805 AFFICHER RECNO,':',REC
806 RECNO_RECNO+1
807 ALLER EN 802


900 PROCEDURE &INIT()
905 CHAINE USERF;USERF_'#USERS';*USERS FILE.
910 CHAINE MESGF;MESGF_'#MESGS';*MESSAGES FILE.
915 CHAINE LF;LF_EQC(10);*LINE FEED, LINE TERMINATOR.
920 CHAINE CR;CR_EQC(13);*CARRIAGE RETURN, LINE INPUT.
925 CHAINE US;US_EQC(31);*UNIT SEPARATOR CHARACTER.
930 LOA_97;LOZ_122;LO2UP_-32;*LOWER CASE TO UPPER CASE
935 MXUSR_127;*MAXIMUM NUMBER OF USER SLOT PER FILE RECORD.
940 MXMSG_253;*MAXIMUM NUMBER OF MESSAGE SLOT PER FILE RECORD.
945 MXTXT_1010;*MAXIMUM TEXT CHUNK LENGTH PER FILE RECORD.
950 TINT_1;*TYPE INTEGER
955 TSTR_3;*TYPE STRING
960 CHAINE ERROR;ERROR_'';ERRLI_0;*ERROR HANDLER LINE
965 CHAINE CUSER;CUSER_'';*CURRENT USER RECORD.
970 CHAINE DRIGS;DRIGS_'MAIL';*DEFAULT USER RIGHTS.
975 RETOUR

1000* &FNREC(FILE) ALLOCATE A NEW RECORD IN THE FILE.
1001 PROCEDURE &FNREC(FILE) LOCAL FILE,TOC,MXRNO,FREEL,NFREL
1002 CHARGER TOC,2,FILE;MXRNO_TOC[1];FREEL_TOC[2]
1003 SI FREEL#0 ALORS ALLER EN 1010
1004 MXRNO_MXRNO+1
1005 TOC[1]_MXRNO
1006 GARER TOC,2,FILE
1007 RESULTAT MXRNO
1010 CHARGER NFREL,FREL,FILE
1013 TOC[2]_NFREL
1016 GARER TOC,2,FILE
1019 RESULTAT FREEL

1100* &FFREC(FILE,RECNO) FREES A RECORD IN THE FILE
1110 PROCEDURE &FFREC(FILE,RECNO) LOCAL FILE,RECNO,TOC,MXRNO,FREEL
1120 CHARGER TOC,2,FILE;MXRNO_TOC[1];FREEL_TOC[2]
1130 SI RECNO<3 OU MXRNO<RECNO ALORS &ERROR('FFREC: RECNO OUT OF BOUNDS')
1140 GARER FREEL,RECNO,FILE
1150 TOC[2]_RECNO
1160 GARER TOC,2,FILE
1170 RETOUR

1200* USER STRUCTURE: A STRING WITH US SEPARATORS
1210 PROCEDURE &UTYPE(USER) LOCAL USER;RESULTAT &FIELD(USER,US,1)
1220 PROCEDURE &UUID(USER) LOCAL USER;RESULTAT CNB(&FIELD(USER,US,2),1)
1230 PROCEDURE &UNAME(USER) LOCAL USER;RESULTAT &FIELD(USER,US,3)
1240 PROCEDURE &UPASS(USER) LOCAL USER;RESULTAT &FIELD(USER,US,4)
1250 PROCEDURE &URIGH(USER) LOCAL USER;RESULTAT &FIELD(USER,US,5)

1300* &UOPEN: CHECK AND CREATE USER FILE
1301 PROCEDURE &UOPEN() LOCAL HEAD,RES,TOC,I,J,USERS,REC;CHAINE REC
1302 CHARGER HEAD,1,USERF,RES
1303 SI RES=3 ALORS ALLER EN 1310
1304 REC_'USERS'!US!'1'; GARER REC,1,USERF
1305 TABLEAU TOC[3];TOC[1]_3;TOC[2]_0;TOC[3]_0
1306 GARER TOC,2,USERF
1307 TABLEAU USERS[MXUSR,2];FAIRE 1307 POUR I_1 JUSQUA MXUSR;FAIRE 1307 POUR J_1 JUSQUA 2;USERS[I,J]_0
1308 GARER USERS,3,USERF
1309 ALLER EN 1312
1310 SI &FIELD(HEAD,US,1)#'USERS' ALORS &ERROR(USERF!' N''EST PAS UN FICHIER UTILISATEURS.')
1311 SI &FIELD(HEAD,US,2)#'1'     ALORS &ERROR(USERF!' N''EST PAS UN FICHIER UTILISATEURS DE VERSION 1.')
1312 RETOUR

1400* &UNREC: ALLOCATES A NEW RECORD IN THE USER FILE
1410 PROCEDURE &UNREC(); RESULTAT &FNREC(USERF)

1420* &UFREC: FREES AN OLD RECORD IN THE USER FILE
1430 PROCEDURE &UFREC(RECNO) LOCAL RECNO; RESULTAT &FFREC(USERF,RECNO)

1500* &UQUER(NUSRS,USERS)
1510 PROCEDURE &UQUER(NUSRS,USERS)
1520 CHARGER TOC,2,USERF; NUSRS_TOC[3]
1530 CHARGER USERS,3,USERF
1540 RETOUR

1600* &RFUID(NUSRS,USERS,UID,INDEX) FIND THE RECORD FOR THE GIVEN UID IN THE USERS TABLEAU
1610 PROCEDURE &RFUID(NUSRS,USERS,UID,INDEX) LOCAL UID,I
1620 FAIRE 1630 POUR I_1 JUSQUA NUSRS
1630 SI UID=USERS[I,2] ALORS DEBUT INDEX_I;RESULTAT USERS[I,1] FIN
1640 INDEX_NUSRS;RESULTAT 0

1700* &UQUID(UID) QUERY USER RECORD BY UID
1710 PROCEDURE &UQUID(UID,RECNO) LOCAL UID,TOC,NUSRS,USERS,INDEX,USER
1720 &UOPEN()
1730 CHARGER TOC,2,USERF;NUSRS_TOC[3]
1740 CHARGER USERS,3,USERF
1750 RECNO_&RFUID(NUSRS,USERS,UID,INDEX)
1760 SI RECNO=0 ALORS ALLER EN 1790
1770 CHARGER USER,RECNO,USERF
1780 RESULTAT USER
1790 RESULTAT ''

1800* &UQNAM(NAME) QUERY USER RECORD BY NAME
1810 PROCEDURE &UQNAM(NAME,RECNO) LOCAL NAME,TOC,NUSRS,USERS,INDEX,USER
1820 &UOPEN()
1830 CHARGER TOC,2,USERF;NUSRS_TOC[3]
1840 CHARGER USERS,3,USERF
1850 FAIRE 1880 POUR I_1 JUSQUA NUSRS
1860 RECNO_USERS[I,1]
1870 CHARGER USER,RECNO,USERF
1880 SI NAME=&UNAME(USER) ALORS RESULTAT USER
1890 RESULTAT ''

1900* &NUID(NUSRS,USERS) COMPUTE A NEW UID
1910 PROCEDURE &NUID(NUSRS,USERS) LOCAL NUSRS,USERS,I,UID
1920 SI NUSRS=0 ALORS RESULTAT 1
1930 UID_0
1940 FAIRE 1950 POUR I_1 JUSQUA NURSR
1950 SI USERS[I,2]>UID ALORS UID_USERS[I,2]
1960 RESULTAT UID+1

2000* &HASH(CH) COMPUTE A HASH OF THE STRING; THIS IS A STUB IMPLEMENTATION, A REAL HASH IS NEEDED.
2005 PROCEDURE &HASH(CH) LOCAL CH,H,I,J,K,L,T
2010 CHAINE H;TABLEAU T[16];H_'';K_129;L_0
2015 FAIRE 2015 POUR J_1 JUSQUA 16;T[J]_0
2020 J_1
2025 FAIRE 2040 POUR I_1 JUSQUA LGR(CH)
2030 K_OXL(K,OXL(T[J],OXL(L,EQN(CH,I))))
2035 L_OXL(L,ENT(K/8))
2040 T[J]_K;J_SI J=16 ALORS 1 SINON J+1
2045 FAIRE 2050 POUR J_1 JUSQUA 16
2050 H_H!&HEX2(T[J])
2055 RESULTAT H
2060 PROCEDURE &HEX2(N) LOCAL N,H,L
2065 H_ENT(N/16);L_N-H*16
2070 RESULTAT &HEX(H)!&HEX(L)
2075 PROCEDURE &HEX(D) LOCAL D
2080 RESULTAT SCH('0123456789ABCDEF',D+1,1)

2200* &UIUSR(NAME,PASS,RIGHS) INSERT A NEW USER IN THE USER FILE
2210 PROCEDURE &UIUSR(NAME,PASS,RIGHS) LOCAL NAME,PASS,RIGHS,RECNO,USER,NUSRS,USERS
2220 &UOPEN()
2230 CHAINE USER;USER_&UQNAM(NAME,RECNO)
2240 SI USER#'' ALORS &ERROR('UN UTILISATEUR NOMME '!NAME!' EXISTE DEJA!')
2250 RECNO_&UNREC();* modifies the toc, so it must be before reading it!
2260 CHARGER TOC,2,USERF;NUSRS_TOC[3]
2270 SI NUSRS>=MXUSR ALORS &ERROR('IL Y A TROP D''UTILISATEURS DANS LE FICHIER '!USERF!'!')
2280 CHARGER USERS,3,USERF
2290 UID_&NUID(NUSRS,USERS)
2300 REC_'U'!US!NAME!US!&HASH(NAME!'|'!PASS)!US!RIGHS
2310 GARER REC,RECNO,USERF
2320 USERS[NUSRS,1]_RECNO;USERS[NUSRS,2]_UID;NUSRS_NUSRS+1;TOC[3]_NUSRS
2330 GARER USERS,3,USERF
2340 GARER TOC,2,USERF
2350 RESULTAT RECNO


2400* &UVALI(NAME,PASS) VALIDATE USER LOGIN
2410 PROCEDURE &UVALI(NAME,PASS) LOCAL NAME,PASS,RECNO,USER
2420 CHAINE USER;USER_&UQNAM(NAME,RECNO)
2430 SI USER='' ALORS RESULTAT 0
2440 RESULTAT SI &HASH(NAME!'|'!PASS)=&UPASS(USER) ALORS 1 SINON 0

2500* &UDUSR(NAME) DELETE THE NAMED USER
2510 PROCEDURE &UDUSR(NAME) LOCAL NAME,USER,RECNO,TOC,NUSRS,USERS,UID
2520 &UOPEN()
2530 USER_&UQNAM(USER,RECNO)
2540 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR NOMME '!NAME!'!')
2550 CHARGER TOC,2,USERF
2560 SI NUSRS=0 ALORS &ERROR('INCOHERENCE: IL N''Y A PAS D''UTILISATEUR DANS LE FICHIER!')
2570 CHARGER USERS,3,USERF
2580 UID_&UUID(USER)
2590 RECNO_&RFUID(NUSRS,USERS,UID,INDEX)
2600 SI RECNO=0 ALORS ALLER EN 2720
2610 FAIRE 2640 POUR I_INDEX JUSQUA NUSRS-1
2620 USERS[I,1]_USERS[I+1,1]
2630 USERS[I,2]_USERS[I+1,2]
2640*FIN FAIRE
2650 NUSRS_NUSRS-1
2660 USERS[NUSRS+1,1]_RECNO
2670 USERS[NUSRS+1,2]_UID
2680 GARER USERS,3,USERF
2690 TOC[3]_NUSRS
2700 GARER TOC,2,USERF
2710 &UFREC(RECNO)
2720 RETOUR


3000* MESG STRUCTURE: A STRING WITH US SEPARATORS
3001 PROCEDURE &MTYPE(MESG) LOCAL MESG;RESULTAT &FIELD(MESG,US,1)
3002 PROCEDURE &MNEXT(MESG) LOCAL MESG;RESULTAT CNB(&FIELD(MESG,US,2),1)
3003 PROCEDURE &MTEXT(MESG) LOCAL MESG;RESULTAT &FIELD(MESG,US,3)

3100* &MOPEN: CHECK AND CREATE MESG FILE
3110 PROCEDURE &MOPEN() LOCAL HEAD,RES,TOC,I,J,USERS,REC;CHAINE REC
3120 CHARGER HEAD,1,MESGF,RES
3130 SI RES=3 ALORS ALLER EN 3200
3140 REC_'MESGS'!US!'1';GARER REC,1,MESGF
3150 TABLEAU TOC[3];TOC[1]_3;TOC[2]_0;TOC[3]_0
3160 GARER TOC,2,MESGF
3170 TABLEAU USERS[MXUSR,2];FAIRE 3170 POUR I_1 JUSQUA MXUSR;FAIRE 1370 POUR J_1 JUSQUA 2;USERS[I,J]_0
3180 GARER USERS,3,MESGF
3190 ALLER EN 3220
3200 SI &FIELD(HEAD,US,1)#'MESGS' ALORS &ERROR(MESGF!' N''EST PAS UN FICHIER MESSAGES.')
3210 SI &FIELD(HEAD,US,2)#'1'     ALORS &ERROR(MESGF!' N''EST PAS UN FICHIER MESSAGES DE VERSION 1.')
3220 RETOUR

3300* &MNREC: ALLOCATES A NEW RECORD IN THE MESG FILE
3310 PROCEDURE &MNREC(); RESULTAT &FNREC(MESGF)

3330* &MFREC: FREES AN OLD RECORD IN THE MESG FILE
3340 PROCEDURE &MFREC(RECNO) LOCAL RECNO; RESULTAT &FFREC(MESGF,RECNO)

3400* &MQNAM(NAME) QUERY A USER RECORD IN A MESSAGE FILE BY NAME
3410 PROCEDURE &MQNAM(NAME,MESGS) LOCAL NAME,USER,RECNO
3420 USER_&UQNAM(NAME,RECNO)
3430 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR NOMME '!NAME!'!')
3440 &MQUID(&UUID(USER),MESGS)
3450 RETOUR

3500* &MQUID(UID,MESGS) QUERY A USER RECORD IN A MESSAGE FILE BY UID
3510 PROCEDURE &MQUID(UID,MESGS,RECNO) LOCAL UID,TOC,NUSRS,USERS,INDEX
3520 &MOPEN()
3530 CHARGER TOC,2,MESGF;NUSRS_TOC[3]
3540 CHARGER USERS,3,MESGF
3550 RECNO_&RFUID(NUSRS,USERS,UID,INDEX)
3560 SI RECNO=0 ALORS RETOUR
3570 CHARGER MESGS,RECNO,MESGF
3580 RETOUR

3600* &MIUSR(NAME) INSERT A RECORD FOR NAMED USER IN THE MESSAGE FILE
3610 PROCEDURE  &MIUSR(NAME) LOCAL NAME
3620 USER_&UQNAM(NAME,RECNO)
3630 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR NOMME '!NAME!'!')
3640 &MIUID(&UUID(USER))

3700* &MIUID(UID) INSERT A RECORD FOR USER WITH UID IN THE MESSAGE FILE
3710 PROCEDURE &MIUID(UID) LOCAL UID,USER,MESGS,RECNO,NUSRS,USERS,REC
3720 USER_&MQUID(UID,MESGS,RECNO)
3730 SI USER#'' ALORS &ERROR('UN UTILISATEUR AVEC L''UID '!CCA(UID)!' EXISTE DEJA!')
3740 RECNO_&MNREC()
3750 CHARGER TOC,2,MESGF;NUSRS_TOC[3]
3760 SI NUSRS>=MXUSR ALORS &ERROR('IL Y A TROP D''UTILISATEURS DANS LE FICHIER '!MESGF!'!')
3770 CHARGER USERS,3,MESGF
3780 TABLEAU REC[MXMSG+1];FAIRE 3780 POUR I_1 JUSQUA MXMSG+1;REC[I]_0
3790 GARER REC,RECNO,MESGF
3800 NUSRS_NUSRS+1
3810 USERS[NUSRS,1]_RECNO
3820 USERS[NUSRS,2]_UID
3830 TOC[2]_NUSRS
3840 GARER USERS,3,MESGF
3850 GARER TOC,2,MESGF
3860 RESULTAT RECNO

3900* &MDUNA(NAME) DELETE USER BY NAME FROM MESSAGE FILE
3910 PROCEDURE &MDUNA(NAME) LOCAL NAME,RECNO,USER
3920 USER_&UQNAM(NAME,RECNO)
3930 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR NOMME '!NAME!'!')
3940 &MDUID(&UUID(USER))
3950 RETOUR

4000* &MDUID(UID) DELETE USER BY UID FROM MESSAGE FILE
4010 PROCEDURE &MDUID(UID) LOCAL UID,USER,RECNO,TOC,NUSRS,MESGS,INDEX
4020 &MOPEN()
4030 USER_&MQUID(UID,MESGS,RECNO)
4040 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR AVEC L''UID '!CCA(UID)!' DANS LE FICHIER '!MESGF!'!')
4050 CHARGER TOC,2,MESGF;NUSRS_TOC[3]
4060 SI NUSRS=0 ALORS &ERROR('INCOHERENCE: IL N''Y A PAS D''UTILISATEUR DANS LE FICHIER!')
4070 CHARGER USERS,3,MESGF
4080 RECNO_&RFUID(NUSRS,USERS,UID,INDEX)
4090 SI RECNO=0 ALORS RETOUR
4100 CHARGER MESGS,RECNO,MESGF
4110 FAIRE 4130 POUR I_1 JUSQUA MESGS[1]
4120 &MDMSG(UID,I)
4130*FIN FAIRE
4140 FAIRE 4170 POUR I_INDEX JUSQUA NUSRS-1
4150 USERS[I,1]_USERS[I+1,1]
4160 USERS[I,2]_USERS[I+1,2]
4170*FIN FAIRE
4180 USERS[NUSRS,1]_RECNO
4190 USERS[NUSRS,2]_UID
4200 NUSRS_NUSRS-1
4210 GARER USERS,3,MESGF
4220 TOC[3]_NUSRS
4230 GARER TOC,2,MESGF
4240 &MFREC(RECNO)
4250 RETOUR

4300* &FIELD(REC,SEP,INDEX) RETURN THE FIELD AT INDEX IN THE RECORD.
4310 PROCEDURE &FIELD(REC,SEP,INDEX) LOCAL REC,SEP,INDEX,I,P,N
4320 P_1
4330 N_POS(REC,P,SEP)
4340 SI N=0 ALORS RESULTAT SI INDEX=1 ALORS SCH(REC,P,'') SINON ''
4350 SI INDEX=1 ALORS RESULTAT SCH(REC,P,N-P)
4360 INDEX_INDEX-1
4370 P_N+1
4380 ALLER EN 4330


4400* &SUBST(STR,OLD,NEW) SUBSTITUTE ALL OCCURENCES OF OLD BY NEW IN THE STRING
4410 PROCEDURE &SUBST(STR,OLD,NEW) LOCAL STR,OLD,NEW,LOLD,RES,P,N
4420 LOLD_LGR(OLD)
4430 CHAINE RES;RES_''
4440 P_1
4450 N_POS(STR,P,OLD)
4460 SI N=0 ALORS RESULTAT SI P=1 ALORS STR SINON RES!SCH(STR,P,'')
4470 RES_RES!SCH(STR,P,N-P)!NEW
4480 P_N+LOLD
4490 ALLER EN 4450


4600* &STMSG(MESG) STORE THE MESSAGE IN THE MESSAGE FILE
4610 PROCEDURE &STMSG(MESG) LOCAL MESG,RECNO,P,LEN,END
4620 MESG_&SUBST(MESG,US,' ')
4630 RECNO_0
4640 LEN_LGR(MESG)
4650 END_LEN
4660 P_1+ENT(LEN/MXTXT)*MXTXT
4670 REC_'M'!US!CCA(RECNO)!US!SCH(MESG,P,END-P)
4680 RECNO_&MNREC()
4690 GARER REC,RECNO,MESGF
4700 END_P
4710 P_P-MXTXT
4720 SI P>0 ALORS ALLER EN 4670
4730 RESULTAT RECNO


4800* &LDMSG(RECNO) LOAD THE MESSAGE FROM THE MESSAGE FILE
4810 PROCEDURE &LDMSG(RECNO) LOCAL RECNO,MSG,REC
4820 CHAINE MSG;MSG_''
4830 CHARGER REC,RECNO,MESGF
4840 SI 'M'#&MTYPE(REC) ALORS &ERROR('INCOHERENCE: ENREGISTREMENT MESSAGE DE MAUVAIS TYPE: '!REC!'!')
4850 MSG_MSG!&MTEXT(REC)
4860 RECNO_&MNEXT(REC)
4870 SI RECNO#0 ALORS ALLER EN 4830
4880 RESULTAT MSG

4900* &DLMSG(RECNO) DELETE THE MESSAGE FROM THE MESSAGE FILE
4910 PROCEDURE &DLMSG(RECNO) LOCAL RECNO,REC
4920 CHARGER REC,RECNO,MESGF
4930 SI 'M'#&MTYPE(REC) ALORS &ERROR('INCOHERENCE: ENREGISTREMENT MESSAGE DE MAUVAIS TYPE: '!REC!'!')
4940 &MFREC(RECNO)
4950 RECNO_&MNEXT(REC)
4960 SI RECNO#0 ALORS ALLER EN 4920

5000* &MIMSG(UID,MESG) INSERT A NEW MESSAGE INTO THE MESSAGE FILE
5010 PROCEDURE &MIMSG(UID,MESG) LOCAL UID,MESG,MESGS,MRCNO,RECNO,USER
5020 USER_&MQUID(UID,MESGS,MRCNO)
5030 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR AVEC L''UID '!CCA(UID)!' DANS LE FICHIER '!MESGF!'!')
5040 SI MXMSG<=MESGS[1] ALORS &ERROR('IL Y A TROP DE MESSAGES POUR L''UTILISATEUR '!CNB(UID)!' DANS LE FICHIER '!MESGF!'!')
5050 RECNO_&STMSG(MESG)
5060 MESGS[1]_MESGS[1]+1
5070 MESGS[1+MESGS[1]]_RECNO
5080 GARER MESGS,MRCNO,MESGF
5090 RETOUR

5100* &MQMGS(UID) RETURN THE NUMBER OF MESSAGES FOR USER UID
5110 PROCEDURE &MQMGS(UID) LOCAL UID,USER,MESGS,MRCNO
5120 USER_&MQUID(UID,MESGS,MRCNO)
5130 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR AVEC L''UID '!CCA(UID)!' DANS LE FICHIER '!MESGF!'!')
5140 RESULTAT  SI MRCNO#0 ALORS MESGS[1] SINON 0

5200* &MQMSG(UID,INDEX) RETURN THE MESSAGE AT INDEX FOR THE USER UID
5210 PROCEDURE &MQMSG(UID,INDEX) LOCAL UID,INDEX,USER,MESGS,MRCNO,MCNT
5220 USER_&MQUID(UID,MESGS,MRCNO)
5230 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR AVEC L''UID '!CCA(UID)!' DANS LE FICHIER '!MESGF!'!')
5240 SI MRCNO=0 ALORS RESULTAT ''
5250 MCNT_MESGS[1]
5260 SI INDEX<1 OU MCNT<INDEX ALORS &ERROR('PAS DE MESSAGE NUMERO '!CCA(INDEX)!' POUR L''UTILISATEUR UID '!CCA(UID)!'!')
5270 RECNO_MESGS[1+INDEX]
5280 RESULTAT &LDMSG(RECNO)

5300* &MDMSG(UID,INDEX) DELETE THE MESSAGE AT INDEX FOR THE USER UID
5310 PROCEDURE &MDMSG(UID,INDEX) LOCAL UID,INDEX,USER,MESGS,MRCNO,MCNT,I
5320 USER_&MQUID(UID,MESGS,MRCNO)
5330 SI USER='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR AVEC L''UID '!CCA(UID)!' DANS LE FICHIER '!MESGF!'!')
5340 SI MRCNO=0 ALORS RESULTAT ''
5350 MCNT_MESGS[1]
5360 SI INDEX<1 OU MCNT<INDEX ALORS &ERROR('PAS DE MESSAGE NUMERO '!CCA(INDEX)!' POUR L''UTILISATEUR UID '!CCA(UID)!'!')
5370 RECNO_MESGS[1+INDEX]
5380 FAIRE 5390 POUR I_1+INDEX JUSQUA MCNT
5390 MESGS[I]_MESGS[I+1]
5400 MESGS[1]_MESGS[1]-1
5410 GARER MESGS,MRCNO,MESGS
5420 &DLMSG(RECNO)
5430 RETOUR

5500* &QUERY(PRMPT,TYPE) ASK THE USER FOR A DATA OF THE GIVEN TYPE
5510 PROCEDURE &QUERY(PRMPT,TYPE) LOCAL PRMPT,TYPE,RINT,RSTR
5520 CHAINE RSTR
5530 AFFICHER[/,U]PRMPT
5540 SI TYPE=TINT ALORS DEBUT LIRE RINT;RESULTAT RINT FIN
5550 SI TYPE=TSTR ALORS DEBUT LIRE RSTR;RESULTAT RSTR FIN
5560 &ERROR('LE TYPE DEMANDE EST INCONNU: '!CCA(TYPE)!'!')

5600* &EDIT(TITLE) EDIT A MULTI-LINE STRING LINES ARE TERMINATED WITH A LF CODE.
5601* PLUS TARD ON REMPLACERA CETTE PETITE FONCTION PAR UN EDITEUR COMPLET.
5610 PROCEDURE &EDIT(TITLE) LOCAL TITLE,TEXT,LINE
5620 AFFICHER[/,U,/]TITLE
5630 AFFICHER['(TERMINER PAR UNE LIGNE CONTENANT SEULEMENT UN POINT).',/]
5640 CHAINE TEXT,LINE;TEXT_''
5650 LIRE LINE;LINE_&SUBST(LINE,CR,'')
5660 SI LINE='.' ALORS RESULTAT TEXT
5670 TEXT_TEXT!LINE!LF
5680 ALLER EN 5650

5700* &ESMSG(FROM,TO,SUBJECT) EDIT AND SEND MESSAGE.
5705* FROM IS A USER NAME; TO IS A USER RECORD; SUBJ IS A STRING (POSSIBLY EMPTY).
5710 PROCEDURE &ESMSG(FROM,TO,SUBJ) LOCAL FROM,TO,SUBJ,BODY,DATE,MESG,SAVER
5715 SI SUBJ='' ALORS SUBJ_&QUERY('SUBJECT: ',TSTR)
5720 CHAINE BODY;BODY_&EDIT('MESSAGE: ')
5725 CHAINE DATE;DATE_DAT()
5730 SAVER_ERRLI;ERRLI_5760;&MIUID(&UUID(TO))
5735 ERRLI_SAVER
5740 CHAINE MESG;MESG_'FROM: '!FROM!LF!'TO: '!&UNAME(TO)!LF!'DATE: '!DATE!LF!'SUBJECT: '!SUBJ!LF!LF!BODY!LF
5745 &MIMSG(&UUID(TO),MESG)
5750 RETOUR


10000* &SEL(RIGHS) CHECK WHETHER THE RIGHS ARE IN THE CURRENT USER RIGHTS
10001 PROCEDURE &SEL(RIGHT) LOCAL RIGHT,I,URIGH;CHAINE URIGS,URIGH
10002 SI RIGHT='' ALORS RESULTAT 1
10003 I_1
10004 URIGS_&URIGH(CUSER)
10005 URIGH_&FIELD(URIGS,'+',I)
10006 SI URIGH='' ALORS RESULTAT 0
10007 SI URIGH=RIGHT ALORS RESULTAT 1
10008 I_I+1
10009 ALLER EN 10005

11000* &CSCC() SE CREER UN COMPTE
11010 PROCEDURE &CSCC() LOCAL NAME,PASS
11020 AFFICHER 'SE CREER UN COMPTE UTILISATEUR'
11030 CHAINE NAME;NAME_&QUERY('NOM D''UTILISATEUR: ',TSTR)
11040 CHAINE PASS;PASS_&QUERY('MOT DE PASSE: ',TSTR)
11050 &UIUSR(NAME,PASS,DRIGS)
11060 RETOUR

11100* &CLIN() LOG IN
11101 PROCEDURE &CLIN() LOCAL NAME,PASS
11102 AFFICHER 'CONNEXION A LA MESSAGERIE'
11103 CHAINE NAME;NAME_&QUERY('NOM D''UTILISATEUR : ',TSTR)
11104 CHAINE PASS;PASS_&QUERY('MOT DE PASSE : ',TSTR)
11105 SI 0#&UVALI(NAME,PASS) ALORS CUSER_&UQNAM(NAME) SINON &ERROR('COMPTE INVALIDE')
11151 RETOUR

11200* &CLOUT() LOG OUT
11201 PROCEDURE &CLOUT()
11202 AFFICHER 'DECONNEXION DE LA MESSAGERIE'
11203 CUSER_''
11204 RETOUR

11300* &CCCU() CREER UN COMPTE UTILISATEUR
11301 PROCEDURE &CCCU() LOCAL USER,PASS,RIGHS
11302 AFFICHER 'CREER UN COMPTE UTILISATEUR'
11303 &CKRIG('USER')
11304 CHAINE USER;USER_&QUERY('NOM D''UTILISATEUR: ',TSTR)
11305 CHAINE PASS;PASS_&QUERY('MOT DE PASSE: ',TSTR)
11306 CHAINE RIGHS;RIGHS_&QUERY('DROITS: ',TSTR)
11307 &UIUSR(NAME,PASS,RIGHS)
11351 RETOUR


11400* &CSCU() SUPPRIMER UN COMPTE UTILISATEUR
11410 PROCEDURE &CSCU() 
11420 AFFICHER 'SUPPRIMER UN COMPTE UTILISATEUR'
11430 &CKRIG('USER')
11440 CHAINE NAME;NAME_&QUERY('NOM D''UTILISATEUR: ',TSTR)
11450 SAVER_ERRLI;ERRLI_11460;&MDUSR(NAME)
11460 ERRLI_SAVER
11470 &UDUSR(NAME)
11480 RETOUR


11500* &CLCU() LISTER LES COMPTES UTILISATEUR
11505 PROCEDURE &CLCU() LOCAL NUSRS,USERS
11510 AFFICHER 'LISTER LES COMPTES UTILISATEUR'
11515 &CKRIG('USER')
11520 TABLEAU USERS[MXUSR,2];&UQUER(NUSRS,USERS)
11530 FAIRE 11540 POUR I_1 JUSQUA NUSRS
11535 USER_&UQUID(USERS[I,2])
11540 AFFICHER[F4.0,X,U,X,U,/]&UUID(USER),&PAD(&UNAME(USER),12,'L',' '),&URIGS(USER)
11545 RETOUR

11600* &CSNDM() ENVOYER UN MESSAGE
11601 PROCEDURE &CSNDM() LOCAL FROM,TO,TOUSR
11602 AFFICHER 'ENVOYER UN MESSAGE'
11603 &CKRIG('MAIL')
11604 FROM_&UNAME(CUSER)
11605 TO_&UPCAS(&QUERY('TO: ',TSTR))
11606 TOUSR_&UQNAM(TO)
11607 SI TOUSR='' ALORS &ERROR('IL N''Y A PAS D''UTILISATEUR AYANT POUR NOM '''!TO!'''!')
11608 &ESMSG(FROM,TOUSR,'')
11651 RETOUR

11700* &CLISM() LISTER SES MESSAGES
11701 PROCEDURE &CLISM() LOCAL UID,MCNT,I,HEADS,SAVER
11702 AFFICHER 'LISTE DES MESSAGES'
11703 &CKRIG('MAIL')
11704 UID_&UUID(CUSER)
11705 MCNT_&MQMGS(UID)
11706 FAIRE 11712 POUR I_1 JUSQUA MCNT
11707 SAVER_ERRLI;ERRLI_11708;HEADS_'';HEADS_&HEADS(&MQMSG(UID,I))
11708 ERRLI_SAVER
11709 SI HEADS='' ALORS DEBUT AFFICHER[F3.0,':',/]I;ALLER EN 11712 FIN
11710 FROM_&PAD(&HFELD(HEADS,'FROM'),12,'L',' ')
11711 DATE_&PAD(&HFELD(HEADS,'DATE'),18,'L',' ')
11712 SUBJ_&HFELD(HEADS,'SUBJECT')
11710 AFFICHER[F3.0,': ',U,' ',U,' ',U,/]I,FROM,DATE,SUBJ
11712*FIN FAIRE
11751 RETOUR

11800* &CREDM() LIRE UN MESSAGE
11801 PROCEDURE &CREDM()
11802 AFFICHER 'LIRE UN MESSAGE'
11803 &CKRIG('MAIL')
11804 UID_&UUID(CUSER)
11805 MSGNO_&QUERY('NUMERO DE MESSAGE:',TINT)
11806 AFFICHER &MQMSG(UID,MSGNO)
11807 RETOUR

11900* &CRESM() REPONDRE A UN MESSAGE
11901 PROCEDURE &CRESM() LOCAL UID,MSGNO,FROM,SENDR,HEADS,FROM,SUBJ,SAVER
11902 AFFICHER 'REPONDRE A UN MESSAGE'
11903 &CKRIG('MAIL')
11904 UID_&UUID(CUSER)
11905 FROM_&UNAME(CUSER)
11906 MSGNO_&QUERY('NUMERO DE MESSAGE:',TINT)
11907 SAVER_ERRLI;ERRLI_11908;HEADS_'';HEADS_&HEADS(&MQMSG(UID,MSGNO))
11908 ERRLI_SAVER
11909 SI HEADS='' ALORS &ERROR('PAS D''EXPEDITEUR CAR PAS D''ENTETES!')
11910 SENDR_&HFELD(HEADS,'FROM')
11911 SUBJ_&HFELD(HEADS,'SUBJECT')
11912 SI SENDR='' ALORS &ERROR('PAS D''EXPEDITEUR DANS LES ENTETES!')
11913 &ESNDM(FROM,&UQNAM(SENDR),SI SUBJ='' ALORS '' SINON 'RE: '!SUBJ)
11951 RETOUR

12000* &CDELM() SUPPRIMER UN MESSAGE
12010 PROCEDURE &CDELM() LOCAL UID,MSGNO
12020 AFFICHER 'SUPPRIMER UN MESSAGE'
12030 &CKRIG('MAIL')
12040 UID_&UUID(CUSER)
12050 MSGNO_&QUERY('NUMERO DE MESSAGE:',TINT)
12060 &MDMSG(UID,MSGNO)
12070 RETOUR

12100* &CQUIT() QUITTER
12101 PROCEDURE &CQUIT()
12151 RETOUR EN QUILI

19000* &CKRIG(RIGHT) SIGNALS AN ERROR IF RIGHT IS NOT IN CUSER RIGHTS. 
19010 PROCEDURE &CKRIG(RIGHT) LOCAL RIGHT
19020 RETOUR

19100* &HEADS(MESG) PARSES HEADERS OUT OF THE MESSAGE
19105 PROCEDURE &HEADS(MESG) LOCAL MESG,HLEN,SRC,HEADS,P,N,KEY,VAL
19110 CHAINE SRC,HEADS,KEY,VAL
19115 HLEN_POS(MESG,1,EQC(10)!EQC(10))
19120 SI HLEN=0 ALORS RESULTAT ''
19125 SRC_SCH(MESG,1,HLEN)
19130 HEADS_''
19135 P_1
19140 N_POS(SRC,P,':')
19145 SI N=0 ALORS RESULTAT HEADS
19150 KEY_&UPCAS(SCH(SRC,P,N-P))
19155 P_N+1;N_POS(SRC,P,LF)
19160 VAL_&TRIM(' ',SCH(SRC,P,N-P))
19165 HEADS_HEADS!US!KEY!US!VAL
19170 P_N+1;ALLER EN 19140

19200* &HFELD(HEADS,KEY) SELECT THE VALUE OF THE HEADER KEY.
19210 PROCEDURE &HFELD(HEADS,KEY) LOCAL HEADS,KEY,I,HKEY,HVAL
19220 CHAINE HKEY,HVAL
19230 I_2
19240 HKEY_&FIELD(HEADS,US,I)
19250 SI HKEY=KEY ALORS RESULTAT &FIELD(HEADS,US,I+1)
19260 SI HKEY='' ALORS RESULTAT ''
19270 I_I+2
19280 ALLER EN 19240

19300* &PAD(CH,LEN,JUST) PAD A STRING
19310 PROCEDURE &PAD(STR,LEN,JUST,PAD) LOCAL STR,LEN,JUST,PAD,LSTR,LEFT
19320 LSTR_LGR(STR)
19330 SI LSTR>=LEN ALORS RESULTAT STR
19340 SI JUST='L' ALORS RESULTAT STR!&MKSTR(LEN-LSTR,PAD)
19350 SI JUST='R' ALORS RESULTAT &MKSTR(LEN-LSTR,PAD)!STR
19360 LEFT_ENT((LEN-LSTR)/2);RESULTAT &MKSTR(LEFT,PAD)!STR!&MKSTR(LEN-LSTR-LEFT,PAD)

19400* &MKSTR(LEN,CH) MAKES A STRING OF LENGTH LEN CONTAINING REPEATIONS OF STRING CH.
19410 PROCEDURE &MKSTR(LEN,CH) LOCAL LEN,CH,RES,LCH,SLEN,REST
19420 CHAINE RES
19430 SI CH='' ALORS RESULTAT &MKSTR(LEN,' ')
19440 LCH_LGR(CH)
19450 SI LEN<=LCH ALORS RESULTAT SCH(CH,1,LEN)
19460 SI LEN<=2*LCH ALORS RESULTAT SCH(CH!CH,1,LEN)
19470 SLEN_ENT(LEN/2/LCH)*LCH
19480 RES_&MKSTR(SLEN,CH)
19481 REST_LEN-2*SLEN
19490 RESULTAT SI REST=0 ALORS RES!RES SINON RES!RES!&MKSTR(REST,CH)

19500* &TRIM(BAD,STRING) TRIM THE STRING LEFT AND RIGHT FROM ITS BAD CHARACTERS.
19505 PROCEDURE &TRIM(BAD,STR) LOCAL BAD,STR,L,R,C,LEN
19510 CHAINE C
19515 LEN_LGR(STR)
19520 L_1
19525 SI L>LEN ALORS ALLER EN 19540
19530 C_SCH(STR,L,1)
19535 SI POS(BAD,1,C)#0 ALORS DEBUT L_L+1;ALLER EN 19525 FIN
19540 R_LEN
19545 SI R=L ALORS ALLER EN 19560 
19550 C_SCH(STR,R,1)
19555 SI POS(BAD,1,C)#0 ALORS DEBUT R_R-1;ALLER EN 19545 FIN
19560 RESULTAT SCH(STR,L,R-L+1)


19600* &UPCAS(STR) UPPER CASE THE STRING
19610 PROCEDURE &UPCAS(STR) LOCAL STR,UPP,C,CC,I
19620 CHAINE UPP,C
19630 UPP_''
19640 FAIRE 19670 POUR I_1 JUSQUA LGR(STR)
19650 C_SCH(STR,I,1)
19660 CC_EQN(C)
19670 UPP_UPP!SI LOA<=CC ET CC<=LOZ ALORS EQC(CC+LO2UP) SINON C
19680 RESULTAT UPP
 
19900* &ERROR(MSG) SIGNALS AN ERROR
19901 PROCEDURE &ERROR(MSG) LOCAL MSG
19902 SI ERRLI=0 ALORS DEBUT AFFICHER MSG;TERMINER FIN
19903 ERROR_MSG
19904 RETOUR EN ERRLI

20000* &MESG() THE MAIN PROGRAM
20010 PROCEDURE &MESG() LOCAL C,CHOIX
20011 ERRLI_20260;QUILI_20270
20020 SI 1=&SEL('')     ALORS AFFICHER ' 1) SE CREER UN COMPTE'
20030 SI 1=&SEL('')     ALORS AFFICHER ' 2) SE CONNECTER'
20040 SI 1=&SEL('USER') ALORS AFFICHER ' 3) CREER UN COMPTE UTILISATEUR'
20050 SI 1=&SEL('USER') ALORS AFFICHER ' 4) SUPPRIMER UN COMPTE UTILISATEUR'
20060 SI 1=&SEL('USER') ALORS AFFICHER ' 5) LISTER LES COMPTES UTILISATEUR'
20070 SI 1=&SEL('MAIL') ALORS AFFICHER ' 6) ENVOYER UN MESSAGE'
20080 SI 1=&SEL('MAIL') ALORS AFFICHER ' 7) LISTER SES MESSAGES'
20090 SI 1=&SEL('MAIL') ALORS AFFICHER ' 8) LIRE UN MESSAGE'
20100 SI 1=&SEL('MAIL') ALORS AFFICHER ' 9) REPONDRE A UN MESSAGE'
20110 SI 1=&SEL('MAIL') ALORS AFFICHER '10) SUPPRIMER UN MESSAGE'
20120 SI 1=&SEL('')     ALORS AFFICHER '11) QUITTER'
20130 AFFICHER 'VOTRE CHOIX: ';LIRE CHOIX
20140 SI CHOIX<1 OU CHOIX>11 ALORS ALLER EN 20130
20150 SI CHOIX=1 ALORS DEBUT &CSCC();ALLER EN 20020 FIN
20160 SI CHOIX=2 ALORS DEBUT &CLIN();ALLER EN 20020 FIN
20170 SI CHOIX=3 ALORS DEBUT &CCCU();ALLER EN 20020 FIN
20180 SI CHOIX=4 ALORS DEBUT &CSCU();ALLER EN 20020 FIN
20190 SI CHOIX=5 ALORS DEBUT &CLCU();ALLER EN 20020 FIN
20200 SI CHOIX=6 ALORS DEBUT &CSNDM();ALLER EN 20020 FIN
20210 SI CHOIX=7 ALORS DEBUT &CLISM();ALLER EN 20020 FIN
20220 SI CHOIX=8 ALORS DEBUT &CREDM();ALLER EN 20020 FIN
20230 SI CHOIX=9 ALORS DEBUT &CRESM();ALLER EN 20020 FIN
20240 SI CHOIX=10 ALORS DEBUT &CDELM();ALLER EN 20020 FIN
20250 SI CHOIX=11 ALORS DEBUT &CQUIT();ALLER EN 20020 FIN
20260 AFFICHER ERROR
20270 &CLOUT()
20280 RETOUR


