1*BOURGUIGNON PASCAL 29 07 2014
2*CHARG
3*CHARGE UN FICHIER A PARTIR DE DONNEES PERFOREES SUR UN RUBAN PAR PERFO.
4*
5*TOURNE

10 &RUBIN()
12 CHAINE NFIC;AFFICHER[/,'NOM DU FICHIER: '];LIRE NFIC;AFFICHER[/]
14 CHARGER ENR,1,NFIC,STAT
16 SI STAT#-2 ALORS SUPPRIMER NFIC
18 LIRE ENRNO,ENRTY;LIBERER ENR
20 SI ENRNO=0 ALORS DEBUT AFFICHER['FIN DE FICHIER',/];&LIROF();TERMINER FIN
22 AFFICHER['ENREGISTREMENT NO. ',U,' DE TYPE ',U,/]ENRNO,SI ENRTY<2 ALORS (SI ENRTY=0 ALORS 'NOMBRE' SINON 'VECTEUR') SINON (SI ENRTY=2 ALORS 'MATRICE' SINON 'CHAINE')
24 SI ENRTY=0 ALORS DEBUT LIRE ENR;GARER ENR,ENRNO,NFIC;ALLER EN 18 FIN
26 SI ENRTY=1 ALORS DEBUT &EVECT(ENRNO,NFIC);ALLER EN 18 FIN
28 SI ENRTY=2 ALORS DEBUT &EMATR(ENRNO,NFIC);ALLER EN 18 FIN
30 SI ENRTY=3 ALORS DEBUT &ECHAI(ENRNO,NFIC);ALLER EN 18 FIN
32 &ERROR('TYPE D''ENREGISTREMENT INVALIDE: '!CNB(ENRTY));&LIROF();TERMINER



100*********************************************************************
101*PROCEDURES POUR ACTIVER ET DESACTIVER LE LECTEUR ET LE PERFORATEUR 
102*DE RUBANS. APPELER &RUBIN() POUR INITIALIZER LES CONSTANTES.
103*********************************************************************
104 PROCEDURE &RUBIN()
105 CHAINE LIRON,PERON,XOFF,PEROF,LIROF
106 LIRON_EQC(17);PERON_EQC(18);XOFF_EQC(19);PEROF_EQC(20);LIROF_EQC(21)
107 RETOUR
108*********************************************************************
109 PROCEDURE &PERFO(DONNE) LOCAL DONNE
110 AFFICHER[U,U,U]PERON,DONNE,PEROF
111 RETOUR
112*********************************************************************
113 PROCEDURE &LIRUB() LOCAL DONNE;CHAINE DONNE
114 AFFICHER[U]LIRON;LIRE DONNE;AFFICHER[U]LIROF
115 RESULTAT DONNE
116*********************************************************************
117 PROCEDURE &LIRON();AFFICHER[U]LIRON;RETOUR
118 PROCEDURE &PERON();AFFICHER[U]PERON;RETOUR
119 PROCEDURE &XOFF(); AFFICHER[U]XOFF; RETOUR
120 PROCEDURE &PEROF();AFFICHER[U]PEROF;RETOUR
121 PROCEDURE &LIROF();AFFICHER[U]LIROF;RETOUR
122*********************************************************************
123*PROCEDURES POUR LIRE UN FICHIER SELON LE FORMAT SUIVANT:
124*********************************************************************
125* ficher ::= entete { enregistrement } fin .
126* entete ::= 'AP' XOFF 'CHARG' XOFF 'EX' XOFF '1' XOFF nomfic XOFF .
127* nomfic ::= /[A-Z][A-Z0-9]{0,4}/ .
128* fin    ::= '0 99' XOFF .
129* enregistrement ::= enrnombre | enrvecteur | enrmatrice | enrchaine .
130* enrnombre  ::= enrno ' 0' XOFF nombre XOFF .
131* enrvecteur ::= enrno ' 1' XOFF vecteur XOFF fintableau XOFF .
132* enrmatrice ::= enrno ' 2' XOFF matrice XOFF fintableau XOFF .
133* fintableau ::= '*' .
134* enrchaine  ::= enrno ' 3' XOFF numchunk XOFF {chunk} .
135* numchunk   ::= nombre .
136* chunk      ::= textchunk | codechunk .
137* textchunk  ::= '1' XOFF text XOFF .
138* codechunk  ::= '2' XOFF longueur {' ' code} XOFF .
139* longueur   ::= nombre .
140* code       ::= nombre .
141* text       ::= /any printable character/ .
142*********************************************************************
143 PROCEDURE &ERROR(MSG) LOCAL MSG;AFFICHER[/,'*** ERREUR: ',U,/]MSG;RETOUR
144*********************************************************************
145 PROCEDURE &EVECT(ENRNO,NFIC)LOCAL ENRNO,NFIC,DATA,LIGNE,ENR,COLS,I
146 CHAINE DATA,LIGNE
147 DATA_''
148 LIRE LIGNE;SI LIGNE='' ALORS ALLER EN 148
149 SI LIGNE#'*' ALORS DEBUT DATA_DATA!LIGNE!' ';ALLER EN 148 FIN
150 COLS_&COMPT(DATA)
151 TABLEAU ENR[COLS]
152 &SVECT(DATA,ENR)
153 GARER ENR,ENRNO,NFIC
154 RETOUR
155*********************************************************************
156 PROCEDURE &EMATR(ENRNO,NFIC)LOCAL ENRNO,NFIC,DATA,LIGNE,ENR,ROWS,COLS,I,J
157 CHAINE DATA,LIGNE,CR
158 DATA_'';CR_EQC(13);ROWS_0;COLS_0
159 LIRE LIGNE;SI LIGNE='' ALORS ALLER EN 159
160 SI LIGNE='*' ALORS ALLER EN 165
161 SI COLS=0 ALORS COLS_&COMPT(LIGNE)
162 ROWS_ROWS+1
163 DATA_DATA!LIGNE!CR
164 ALLER EN 159
165 TABLEAU ENR[ROWS,COLS]
166 &SMATR(DATA,ENR)
167 GARER ENR,ENRNO,NFIC
168 RETOUR
169*********************************************************************
170 PROCEDURE &ECHAI(ENRNO,NFIC)LOCAL ENRNO,NFIC,ENR,LIGNE,NSEGS,KIND,CNT,CODE
171 CHAINE LIGNE,ENR;ENR_'';LIRE NSEGS
172 FAIRE 179 POUR I_1 JUSQUA NSEGS
173 LIRE KIND
174 SI KIND=1 ALORS DEBUT LIRE LIGNE;ENR_ENR!LIGNE;ALLER EN 179 FIN
175 SI KIND#2 ALORS DEBUT &ERROR('TYPE DE SEGMENT INVALIDE '!CNB(KIND));&LIROF();TERMINER FIN
176 LIRE CNT
177 FAIRE 178 POUR C_1 JUSQUA CNT 
178 LIRE CODE;ENR_ENR!EQC(CODE)
179*FIN LECTURE CHAINE
180 GARER ENR,ENRNO,NFIC
181 RETOUR
182*********************************************************************
183 PROCEDURE &COMPT(LIGNE) LOCAL LIGNE,N,P,L;*COMPTE LES NOMBRES
184 N_0;L_LGR(LIGNE);P_1
185 P_SKP(LIGNE,P,' ')
186 SI P>L ALORS RESULTAT N
187 N_N+1
188 P_PTR(LIGNE,P,' ')
189 ALLER EN 185
190*********************************************************************
191 PROCEDURE &SVECT(LIGNE,VECT) LOCAL LIGNE,N,P,L,I
192 N_0;L_LGR(LIGNE);P_1;I_1
193 P_SKP(LIGNE,P,' ')
194 SI P>L ALORS RETOUR
195 VECT[I]_CNB(LIGNE,P)
196 I_I+1
197 P_PTR(LIGNE,P,' ')
198 ALLER EN 193
199*********************************************************************
200 PROCEDURE &SROW(LIGNE,MATR,J) LOCAL LIGNE,N,P,L,I,J
201 N_0;L_LGR(LIGNE);P_1;I_1
202 P_SKP(LIGNE,P,' ')
203 SI P>L ALORS RETOUR
204 MATR[J,I]_CNB(LIGNE,P)
205 I_I+1
206 P_PTR(LIGNE,P,' ')
207 ALLER EN 202
208*********************************************************************
209 PROCEDURE &SMATR(DATA,MATR) LOCAL DATA,N,Q,P,L,J,E
210 N_0;L_LGR(DATA);P_1;J_1;CHAINE E;E_EQC(13)
211 Q_PTR(DATA,P,E)
212 SI Q>L ALORS RETOUR
213 &SROW(SCH(DATA,P,Q-P),MATR,J)
214 J_J+1
215 P_Q+1
216 ALLER EN 211
